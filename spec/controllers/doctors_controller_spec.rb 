# frozen_string_literal: true

require 'rails_helper'

RSpec.describe DoctorsController, type: :controller do
  describe 'Controller' do
    describe 'POST #create' do
      context 'with valid params' do
        it 'creates a new doctor' do
          expect do
            post :create, params: doctor_params
          end.to change(Doctor, :count).by(1)
        end

        it 'redirects to the created doctor' do
          post :create, params: doctor_params
          expect(response).to redirect_to(root_path)
        end
      end

      context 'with invalid params' do
        it 'returns a success response (i.e. to display the "new" template)' do
          expect do
            post :create, params: { doctor: { name: '', crm: '', crm_uf: ''} }
          end.to change(Doctor, :count).by(0)
        end
      end
    end

    describe 'PUT #update' do
      context 'with valid params' do
        it 'updates the requested doctor' do
          patch :update, params: { id: create_doctor.id, doctor: { name: Faker::FunnyName.name } }
          expect(Doctor.count).to eq(1)
        end

        it 'redirects to the doctor' do
          patch :update, params: { id: create_doctor.id, doctor: { name: Faker::FunnyName.name } }
          expect(response).to redirect_to(root_path)
        end
      end

      context 'with invalid params' do
        it 'returns a success response (i.e. to display the "edit" template)' do
          expect{
            put :create, params: { id: create_doctor.id, doctor: { name: '', crm: '', crm_uf: ''} }
          }.to change(Doctor, :count).by(1)
        end
      end
    end

    describe 'DELETE #destroy' do
      it 'destroys the requested doctor' do
        delete :destroy, params: { id: create_doctor.id }
        expect(Doctor.count).to eq(0)
      end

      it 'redirects to the doctors list' do
        delete :destroy, params: { id: create_doctor.id }
        expect(response).to redirect_to(root_path)
      end
    end
  end

  def create_doctor
    create(:doctor)
  end

  def doctor_params
    { doctor: {
      name: Faker::FunnyName.name,
      crm: Faker::Number.number(7),
      crm_uf: 'GO'
    } }
  end
end
